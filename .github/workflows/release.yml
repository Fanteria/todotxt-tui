name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

# We need this to be able to create releases.
permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Get the release version from the tag
        id: get_version
        shell: bash
        run: echo "version=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Build
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        id: build_archive
        shell: bash
        run: |
          binary_name="todotxt-tui"
          dirname="$binary_name-${{ steps.get_version.outputs.version }}-${{ matrix.target }}"
          mkdir -p "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
            7z a "$dirname.zip" "$dirname"
            echo "asset=$dirname.zip" >> "$GITHUB_OUTPUT"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "asset=$dirname.tar.gz" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate checksum
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            certutil -hashfile ${{ steps.build_archive.outputs.asset }} > "${{ steps.build_archive.outputs.asset }}.sha256"
          else
            shasum -a 256 "${{ steps.build_archive.outputs.asset }}" > "${{ steps.build_archive.outputs.asset }}.sha256"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ steps.build_archive.outputs.asset }}
            ${{ steps.build_archive.outputs.asset }}.sha256

  publish:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login
        shell: bash
        run: |
          echo "${{ secrets.CRATES_IO_API_TOKEN }}" | cargo login
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # - name: Publish macro
      #   working-directory: ./todotxt-tui-macros
      #   shell: bash
      #   run: |
      #     git diff --quiet "$(git describe --tags --abbrev=0 HEAD~1)" HEAD . || cargo publish
      - name: Publish
        shell: bash
        run: |
          cargo publish

  upload:
    name: Upload release
    needs: 
      - build
      - publish
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload the binaries
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
